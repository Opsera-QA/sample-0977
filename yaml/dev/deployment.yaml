apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80

---
#Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    argocd.argoproj.io/instance: cpqcore-opsers-app-dec09
  name: customer-view-ingress
spec:
  #ingressClassName: internal-nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: nginx-svc
            port:
              number: 80
        path: /customerviewsvc/(.*)
        # path: *
        pathType: Prefix
   # host: a994e64b0fef54487a8e18c063bf3db1-854741739.us-east-2.elb.amazonaws.com
status:
  loadBalancer: {}
---

---
